// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types.proto

package dht

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_NOOP       MessageType = 0
	MessageType_PING       MessageType = 1
	MessageType_STORE      MessageType = 2
	MessageType_FIND_NODE  MessageType = 3
	MessageType_FIND_VALUE MessageType = 4
)

var MessageType_name = map[int32]string{
	0: "NOOP",
	1: "PING",
	2: "STORE",
	3: "FIND_NODE",
	4: "FIND_VALUE",
}

var MessageType_value = map[string]int32{
	"NOOP":       0,
	"PING":       1,
	"STORE":      2,
	"FIND_NODE":  3,
	"FIND_VALUE": 4,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

type ConnectionType int32

const (
	ConnectionType_NOT_CONNECTED  ConnectionType = 0
	ConnectionType_CONNECTED      ConnectionType = 1
	ConnectionType_CONNECTABLE    ConnectionType = 2
	ConnectionType_CANNOT_CONNECT ConnectionType = 3
)

var ConnectionType_name = map[int32]string{
	0: "NOT_CONNECTED",
	1: "CONNECTED",
	2: "CONNECTABLE",
	3: "CANNOT_CONNECT",
}

var ConnectionType_value = map[string]int32{
	"NOT_CONNECTED":  0,
	"CONNECTED":      1,
	"CONNECTABLE":    2,
	"CANNOT_CONNECT": 3,
}

func (x ConnectionType) String() string {
	return proto.EnumName(ConnectionType_name, int32(x))
}

func (ConnectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

type Node struct {
	Id                   []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash                 []byte         `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	PeerId               []byte         `protobuf:"bytes,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Addrs                [][]byte       `protobuf:"bytes,4,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Connection           ConnectionType `protobuf:"varint,5,opt,name=connection,proto3,enum=dht.ConnectionType" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Node) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Node) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *Node) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *Node) GetConnection() ConnectionType {
	if m != nil {
		return m.Connection
	}
	return ConnectionType_NOT_CONNECTED
}

type Payload struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Hash                 []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Sig                  []byte   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}
func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Payload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Payload) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type Closest struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Closest) Reset()         { *m = Closest{} }
func (m *Closest) String() string { return proto.CompactTextString(m) }
func (*Closest) ProtoMessage()    {}
func (*Closest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}
func (m *Closest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Closest.Unmarshal(m, b)
}
func (m *Closest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Closest.Marshal(b, m, deterministic)
}
func (m *Closest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Closest.Merge(m, src)
}
func (m *Closest) XXX_Size() int {
	return xxx_messageInfo_Closest.Size(m)
}
func (m *Closest) XXX_DiscardUnknown() {
	xxx_messageInfo_Closest.DiscardUnknown(m)
}

var xxx_messageInfo_Closest proto.InternalMessageInfo

func (m *Closest) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type FindRequest struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRequest) Reset()         { *m = FindRequest{} }
func (m *FindRequest) String() string { return proto.CompactTextString(m) }
func (*FindRequest) ProtoMessage()    {}
func (*FindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}
func (m *FindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRequest.Unmarshal(m, b)
}
func (m *FindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRequest.Marshal(b, m, deterministic)
}
func (m *FindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRequest.Merge(m, src)
}
func (m *FindRequest) XXX_Size() int {
	return xxx_messageInfo_FindRequest.Size(m)
}
func (m *FindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindRequest proto.InternalMessageInfo

func (m *FindRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type StoreRequest struct {
	Payload              *Payload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}
func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (m *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(m, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

func (m *StoreRequest) GetPayload() *Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Message struct {
	Id         []byte      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=dht.MessageType" json:"type,omitempty"`
	IsResponse bool        `protobuf:"varint,3,opt,name=is_response,json=isResponse,proto3" json:"is_response,omitempty"`
	Sender     *Node       `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver   *Node       `protobuf:"bytes,6,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Types that are valid to be assigned to Request:
	//	*Message_Find
	//	*Message_Store
	Request isMessage_Request `protobuf_oneof:"request"`
	// Types that are valid to be assigned to Response:
	//	*Message_Success
	//	*Message_Payload
	//	*Message_Closest
	Response             isMessage_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{5}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Request interface {
	isMessage_Request()
}
type isMessage_Response interface {
	isMessage_Response()
}

type Message_Find struct {
	Find *FindRequest `protobuf:"bytes,10,opt,name=find,proto3,oneof" json:"find,omitempty"`
}
type Message_Store struct {
	Store *StoreRequest `protobuf:"bytes,11,opt,name=store,proto3,oneof" json:"store,omitempty"`
}
type Message_Success struct {
	Success bool `protobuf:"varint,20,opt,name=success,proto3,oneof" json:"success,omitempty"`
}
type Message_Payload struct {
	Payload *Payload `protobuf:"bytes,21,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
}
type Message_Closest struct {
	Closest *Closest `protobuf:"bytes,22,opt,name=closest,proto3,oneof" json:"closest,omitempty"`
}

func (*Message_Find) isMessage_Request()     {}
func (*Message_Store) isMessage_Request()    {}
func (*Message_Success) isMessage_Response() {}
func (*Message_Payload) isMessage_Response() {}
func (*Message_Closest) isMessage_Response() {}

func (m *Message) GetRequest() isMessage_Request {
	if m != nil {
		return m.Request
	}
	return nil
}
func (m *Message) GetResponse() isMessage_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Message) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_NOOP
}

func (m *Message) GetIsResponse() bool {
	if m != nil {
		return m.IsResponse
	}
	return false
}

func (m *Message) GetSender() *Node {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetReceiver() *Node {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Message) GetFind() *FindRequest {
	if x, ok := m.GetRequest().(*Message_Find); ok {
		return x.Find
	}
	return nil
}

func (m *Message) GetStore() *StoreRequest {
	if x, ok := m.GetRequest().(*Message_Store); ok {
		return x.Store
	}
	return nil
}

func (m *Message) GetSuccess() bool {
	if x, ok := m.GetResponse().(*Message_Success); ok {
		return x.Success
	}
	return false
}

func (m *Message) GetPayload() *Payload {
	if x, ok := m.GetResponse().(*Message_Payload); ok {
		return x.Payload
	}
	return nil
}

func (m *Message) GetClosest() *Closest {
	if x, ok := m.GetResponse().(*Message_Closest); ok {
		return x.Closest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_Find)(nil),
		(*Message_Store)(nil),
		(*Message_Success)(nil),
		(*Message_Payload)(nil),
		(*Message_Closest)(nil),
	}
}

func init() {
	proto.RegisterEnum("dht.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("dht.ConnectionType", ConnectionType_name, ConnectionType_value)
	proto.RegisterType((*Node)(nil), "dht.Node")
	proto.RegisterType((*Payload)(nil), "dht.Payload")
	proto.RegisterType((*Closest)(nil), "dht.Closest")
	proto.RegisterType((*FindRequest)(nil), "dht.FindRequest")
	proto.RegisterType((*StoreRequest)(nil), "dht.StoreRequest")
	proto.RegisterType((*Message)(nil), "dht.Message")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x4f, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x31, 0x36, 0x18, 0xc6, 0xc4, 0x75, 0xa6, 0x69, 0xbb, 0xea, 0x05, 0x6a, 0xb5, 0x11,
	0xe5, 0xc0, 0x81, 0x48, 0xbd, 0xf3, 0x2f, 0x05, 0x35, 0xb5, 0xd1, 0x86, 0xb4, 0x47, 0xe4, 0x7a,
	0xb7, 0x60, 0x35, 0xb2, 0x5d, 0xaf, 0x53, 0x89, 0x7b, 0xcf, 0xfd, 0xcc, 0xd5, 0xae, 0x0d, 0x71,
	0xc2, 0x6d, 0x66, 0xde, 0x6f, 0x97, 0x37, 0x6f, 0x31, 0x58, 0xf9, 0x3e, 0xe5, 0x62, 0x98, 0x66,
	0x49, 0x9e, 0xa0, 0xce, 0x76, 0xb9, 0xfb, 0x4f, 0x03, 0xc3, 0x4b, 0x18, 0x47, 0x1b, 0xea, 0x11,
	0x23, 0x5a, 0x4f, 0xeb, 0x77, 0x68, 0x3d, 0x62, 0x88, 0x60, 0xec, 0x02, 0xb1, 0x23, 0x75, 0x35,
	0x51, 0x35, 0xbe, 0x01, 0x33, 0xe5, 0x3c, 0xdb, 0x44, 0x8c, 0xe8, 0x6a, 0xdc, 0x94, 0xed, 0x92,
	0xe1, 0x05, 0x34, 0x02, 0xc6, 0x32, 0x41, 0x8c, 0x9e, 0xde, 0xef, 0xd0, 0xa2, 0xc1, 0x2b, 0x80,
	0x30, 0x89, 0x63, 0x1e, 0xe6, 0x51, 0x12, 0x93, 0x46, 0x4f, 0xeb, 0xdb, 0xa3, 0x97, 0x43, 0xb6,
	0xcb, 0x87, 0xd3, 0xe3, 0x78, 0xbd, 0x4f, 0x39, 0xad, 0x60, 0xee, 0x1d, 0x98, 0xab, 0x60, 0x7f,
	0x9f, 0x04, 0x0c, 0x1d, 0xd0, 0x7f, 0xf1, 0x7d, 0xe9, 0x49, 0x96, 0xd2, 0x14, 0x0b, 0xf2, 0xe0,
	0x60, 0x4a, 0xd6, 0x47, 0xa3, 0x7a, 0xc5, 0xa8, 0x03, 0xba, 0x88, 0xb6, 0xc4, 0x28, 0x4e, 0x8a,
	0x68, 0xeb, 0x0e, 0xc0, 0x9c, 0xde, 0x27, 0x82, 0x8b, 0x1c, 0xbb, 0xd0, 0x88, 0x13, 0xc6, 0x05,
	0xd1, 0x7a, 0x7a, 0xdf, 0x1a, 0xb5, 0x95, 0x23, 0x99, 0x01, 0x2d, 0xe6, 0x6e, 0x17, 0xac, 0xeb,
	0x28, 0x66, 0x94, 0xff, 0x7e, 0x90, 0xfc, 0x89, 0x0d, 0xf7, 0x13, 0x74, 0x6e, 0xf3, 0x24, 0xe3,
	0x07, 0xe2, 0x12, 0xcc, 0xb4, 0xf0, 0xac, 0x28, 0x6b, 0xd4, 0x51, 0x77, 0x96, 0x7b, 0xd0, 0x83,
	0xe8, 0xfe, 0xd5, 0xc1, 0xfc, 0xca, 0x85, 0x08, 0xb6, 0xa7, 0x79, 0xbf, 0x07, 0x43, 0x3e, 0x8e,
	0x5a, 0xcd, 0x1e, 0x39, 0xea, 0x82, 0x92, 0x55, 0x19, 0x29, 0x15, 0xbb, 0x60, 0x45, 0x62, 0x93,
	0x71, 0x91, 0x26, 0xb1, 0xe0, 0x6a, 0xe7, 0x16, 0x85, 0x48, 0xd0, 0x72, 0x82, 0xef, 0xa0, 0x29,
	0x78, 0xcc, 0x78, 0xa6, 0xf2, 0x7e, 0xb2, 0x5d, 0x29, 0xe0, 0x07, 0x68, 0x65, 0x3c, 0xe4, 0xd1,
	0x1f, 0x9e, 0x91, 0xe6, 0x73, 0xe8, 0x28, 0xe1, 0x25, 0x18, 0x3f, 0xa3, 0x98, 0x11, 0x50, 0x48,
	0x61, 0xa8, 0x12, 0xcb, 0xa2, 0x46, 0x95, 0x8e, 0x1f, 0xa1, 0x21, 0x64, 0x18, 0xc4, 0x52, 0xe0,
	0xb9, 0x02, 0xab, 0xf1, 0x2c, 0x6a, 0xb4, 0x20, 0xf0, 0x2d, 0x98, 0xe2, 0x21, 0x0c, 0xb9, 0x10,
	0xe4, 0x42, 0x3a, 0x5f, 0x68, 0xf4, 0x30, 0xc0, 0xfe, 0x63, 0x86, 0xaf, 0x4e, 0x33, 0x94, 0x64,
	0x29, 0x4b, 0x32, 0x2c, 0x9e, 0x92, 0xbc, 0xae, 0x90, 0xe5, 0xf3, 0x4a, 0xb2, 0x94, 0x27, 0x6d,
	0x30, 0xb3, 0xc2, 0xc3, 0x04, 0xe4, 0xd2, 0x45, 0x46, 0x83, 0x2f, 0x60, 0x55, 0x92, 0xc5, 0x16,
	0x18, 0x9e, 0xef, 0xaf, 0x9c, 0x9a, 0xac, 0x56, 0x4b, 0xef, 0xb3, 0xa3, 0x61, 0x1b, 0x1a, 0xb7,
	0x6b, 0x9f, 0xce, 0x9d, 0x3a, 0x9e, 0x41, 0xfb, 0x7a, 0xe9, 0xcd, 0x36, 0x9e, 0x3f, 0x9b, 0x3b,
	0x3a, 0xda, 0x00, 0xaa, 0xfd, 0x36, 0xbe, 0xb9, 0x9b, 0x3b, 0xc6, 0xe0, 0x3b, 0xd8, 0x4f, 0xff,
	0xcd, 0x78, 0x0e, 0x67, 0x9e, 0xbf, 0xde, 0x4c, 0x7d, 0xcf, 0x9b, 0x4f, 0xd7, 0xf3, 0x99, 0x53,
	0x93, 0x77, 0x3c, 0xb6, 0x1a, 0xbe, 0x00, 0xab, 0x6c, 0xc7, 0x93, 0x1b, 0xf9, 0x1b, 0x08, 0xf6,
	0x74, 0xec, 0x55, 0x4e, 0x39, 0xfa, 0x8f, 0xa6, 0xfa, 0x4a, 0xaf, 0xfe, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0x73, 0x84, 0x8f, 0xb4, 0x03, 0x00, 0x00,
}
