// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types.proto

package dht

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_NOOP       MessageType = 0
	MessageType_PING       MessageType = 1
	MessageType_STORE      MessageType = 2
	MessageType_FIND_NODE  MessageType = 3
	MessageType_FIND_VALUE MessageType = 4
)

var MessageType_name = map[int32]string{
	0: "NOOP",
	1: "PING",
	2: "STORE",
	3: "FIND_NODE",
	4: "FIND_VALUE",
}

var MessageType_value = map[string]int32{
	"NOOP":       0,
	"PING":       1,
	"STORE":      2,
	"FIND_NODE":  3,
	"FIND_VALUE": 4,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

type ConnectionType int32

const (
	ConnectionType_NOT_CONNECTED  ConnectionType = 0
	ConnectionType_CONNECTED      ConnectionType = 1
	ConnectionType_CONNECTABLE    ConnectionType = 2
	ConnectionType_CANNOT_CONNECT ConnectionType = 3
)

var ConnectionType_name = map[int32]string{
	0: "NOT_CONNECTED",
	1: "CONNECTED",
	2: "CONNECTABLE",
	3: "CANNOT_CONNECT",
}

var ConnectionType_value = map[string]int32{
	"NOT_CONNECTED":  0,
	"CONNECTED":      1,
	"CONNECTABLE":    2,
	"CANNOT_CONNECT": 3,
}

func (x ConnectionType) String() string {
	return proto.EnumName(ConnectionType_name, int32(x))
}

func (ConnectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

type Node struct {
	Id                   []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer                 []byte         `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Addrs                [][]byte       `protobuf:"bytes,3,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Connection           ConnectionType `protobuf:"varint,4,opt,name=connection,proto3,enum=dht.ConnectionType" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Node) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Node) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *Node) GetConnection() ConnectionType {
	if m != nil {
		return m.Connection
	}
	return ConnectionType_NOT_CONNECTED
}

type Message struct {
	Id                   []byte      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=dht.MessageType" json:"type,omitempty"`
	Key                  []byte      `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte      `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	Hash                 []byte      `protobuf:"bytes,12,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_NOOP
}

func (m *Message) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Message) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterEnum("dht.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("dht.ConnectionType", ConnectionType_name, ConnectionType_value)
	proto.RegisterType((*Node)(nil), "dht.Node")
	proto.RegisterType((*Message)(nil), "dht.Message")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0x41, 0x4f, 0xc2, 0x30,
	0x18, 0x65, 0x6b, 0x51, 0xf9, 0x06, 0xb5, 0x7e, 0x7a, 0xe8, 0x91, 0x10, 0x0f, 0x84, 0x03, 0x07,
	0xf8, 0x05, 0x38, 0xa6, 0x21, 0x62, 0x4b, 0xe6, 0xd4, 0x23, 0x99, 0xb4, 0x71, 0xc4, 0x84, 0x2d,
	0xac, 0x1e, 0xf6, 0xef, 0x4d, 0x0b, 0x51, 0x8c, 0xb7, 0xf7, 0x5e, 0xbf, 0xef, 0xbd, 0xd7, 0x7c,
	0x10, 0xd9, 0xa6, 0x32, 0xf5, 0xb8, 0xda, 0x97, 0xb6, 0x44, 0xa2, 0x0b, 0x3b, 0xf8, 0x02, 0x2a,
	0x4b, 0x6d, 0x90, 0x41, 0xb8, 0xd5, 0x22, 0xe8, 0x07, 0xc3, 0x6e, 0x1a, 0x6e, 0x35, 0x22, 0xd0,
	0xca, 0x98, 0xbd, 0x08, 0xbd, 0xe2, 0x31, 0xde, 0x40, 0x3b, 0xd7, 0x7a, 0x5f, 0x0b, 0xd2, 0x27,
	0xc3, 0x6e, 0x7a, 0x20, 0x38, 0x05, 0xd8, 0x94, 0xbb, 0x9d, 0xd9, 0xd8, 0x6d, 0xb9, 0x13, 0xb4,
	0x1f, 0x0c, 0xd9, 0xe4, 0x7a, 0xac, 0x0b, 0x3b, 0x8e, 0x7f, 0xe4, 0xac, 0xa9, 0x4c, 0x7a, 0x32,
	0x36, 0x68, 0xe0, 0xfc, 0xc9, 0xd4, 0x75, 0xfe, 0xf1, 0x3f, 0xf9, 0x16, 0xa8, 0x6b, 0xe9, 0x93,
	0xd9, 0x84, 0x7b, 0xa7, 0xe3, 0xac, 0xb7, 0xf1, 0xaf, 0xc8, 0x81, 0x7c, 0x9a, 0x46, 0x80, 0x5f,
	0x73, 0xd0, 0x35, 0xd6, 0xb9, 0xcd, 0x45, 0x74, 0x68, 0xec, 0xb0, 0xd3, 0x8a, 0xbc, 0x2e, 0x44,
	0xf7, 0xa0, 0x39, 0x3c, 0x7a, 0x84, 0xe8, 0xc4, 0x0e, 0x2f, 0x80, 0x4a, 0xa5, 0x56, 0xbc, 0xe5,
	0xd0, 0x6a, 0x21, 0x1f, 0x78, 0x80, 0x1d, 0x68, 0x3f, 0x67, 0x2a, 0x4d, 0x78, 0x88, 0x3d, 0xe8,
	0xdc, 0x2f, 0xe4, 0x7c, 0x2d, 0xd5, 0x3c, 0xe1, 0x04, 0x19, 0x80, 0xa7, 0xaf, 0xb3, 0xe5, 0x4b,
	0xc2, 0xe9, 0xe8, 0x0d, 0xd8, 0xdf, 0x5f, 0xe2, 0x15, 0xf4, 0xa4, 0xca, 0xd6, 0xb1, 0x92, 0x32,
	0x89, 0xb3, 0x64, 0xce, 0x5b, 0xce, 0xe3, 0x97, 0x06, 0x78, 0x09, 0xd1, 0x91, 0xce, 0xee, 0x96,
	0x2e, 0x03, 0x81, 0xc5, 0x33, 0x79, 0xb2, 0xc5, 0xc9, 0xfb, 0x99, 0xbf, 0xd1, 0xf4, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0xc0, 0xcc, 0xd3, 0x16, 0xb2, 0x01, 0x00, 0x00,
}
